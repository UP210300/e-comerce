{"ast":null,"code":"'use client';\n\nimport { DomHandler } from 'primereact/utils';\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nvar KeyFilter = {\n  /* eslint-disable */\n  DEFAULT_MASKS: {\n    pint: /[\\d]/,\n    \"int\": /[\\d\\-]/,\n    pnum: /[\\d\\.]/,\n    money: /[\\d\\.\\s,]/,\n    num: /[\\d\\-\\.]/,\n    hex: /[0-9a-f]/i,\n    email: /[a-z0-9_\\.\\-@]/i,\n    alpha: /[a-z_]/i,\n    alphanum: /[a-z0-9_]/i\n  },\n  /* eslint-enable */getRegex: function getRegex(keyfilter) {\n    return KeyFilter.DEFAULT_MASKS[keyfilter] ? KeyFilter.DEFAULT_MASKS[keyfilter] : keyfilter;\n  },\n  onBeforeInput: function onBeforeInput(e, keyfilter, validateOnly) {\n    // android devices must use beforeinput https://stackoverflow.com/questions/36753548/keycode-on-android-is-always-229\n    if (validateOnly || !DomHandler.isAndroid()) {\n      return;\n    }\n    this.validateKey(e, e.data, keyfilter);\n  },\n  onKeyPress: function onKeyPress(e, keyfilter, validateOnly) {\n    // non android devices use keydown\n    if (validateOnly || DomHandler.isAndroid()) {\n      return;\n    }\n    if (e.ctrlKey || e.altKey || e.metaKey) {\n      return;\n    }\n    this.validateKey(e, e.key, keyfilter);\n  },\n  onPaste: function onPaste(e, keyfilter, validateOnly) {\n    if (validateOnly) {\n      return;\n    }\n    var regex = this.getRegex(keyfilter);\n    var clipboard = e.clipboardData.getData('text');\n\n    // loop over each letter pasted and if any fail prevent the paste\n    _toConsumableArray(clipboard).forEach(function (c) {\n      if (!regex.test(c)) {\n        e.preventDefault();\n        return false;\n      }\n    });\n  },\n  validateKey: function validateKey(e, key, keyfilter) {\n    if (key === null || key === undefined) {\n      return;\n    }\n\n    // some AZERTY keys come in with 2 chars like ´ç if Dead key is pressed first\n    var isPrintableKey = key.length <= 2;\n    if (!isPrintableKey) {\n      return;\n    }\n    var regex = this.getRegex(keyfilter);\n    if (!regex.test(key)) {\n      e.preventDefault();\n    }\n  },\n  validate: function validate(e, keyfilter) {\n    var value = e.target.value;\n    var validatePattern = true;\n    var regex = this.getRegex(keyfilter);\n    if (value && !regex.test(value)) {\n      validatePattern = false;\n    }\n    return validatePattern;\n  }\n};\nexport { KeyFilter };","map":{"version":3,"names":["DomHandler","_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithoutHoles","isArray","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_nonIterableSpread","TypeError","_toConsumableArray","KeyFilter","DEFAULT_MASKS","pint","pnum","money","num","hex","email","alpha","alphanum","getRegex","keyfilter","onBeforeInput","e","validateOnly","isAndroid","validateKey","data","onKeyPress","ctrlKey","altKey","metaKey","key","onPaste","regex","clipboard","clipboardData","getData","forEach","c","preventDefault","undefined","isPrintableKey","validate","value","target","validatePattern"],"sources":["C:/Users/sofia/e-comerce/frontend/node_modules/primereact/keyfilter/keyfilter.esm.js"],"sourcesContent":["'use client';\nimport { DomHandler } from 'primereact/utils';\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nvar KeyFilter = {\n  /* eslint-disable */\n  DEFAULT_MASKS: {\n    pint: /[\\d]/,\n    \"int\": /[\\d\\-]/,\n    pnum: /[\\d\\.]/,\n    money: /[\\d\\.\\s,]/,\n    num: /[\\d\\-\\.]/,\n    hex: /[0-9a-f]/i,\n    email: /[a-z0-9_\\.\\-@]/i,\n    alpha: /[a-z_]/i,\n    alphanum: /[a-z0-9_]/i\n  },\n  /* eslint-enable */getRegex: function getRegex(keyfilter) {\n    return KeyFilter.DEFAULT_MASKS[keyfilter] ? KeyFilter.DEFAULT_MASKS[keyfilter] : keyfilter;\n  },\n  onBeforeInput: function onBeforeInput(e, keyfilter, validateOnly) {\n    // android devices must use beforeinput https://stackoverflow.com/questions/36753548/keycode-on-android-is-always-229\n    if (validateOnly || !DomHandler.isAndroid()) {\n      return;\n    }\n    this.validateKey(e, e.data, keyfilter);\n  },\n  onKeyPress: function onKeyPress(e, keyfilter, validateOnly) {\n    // non android devices use keydown\n    if (validateOnly || DomHandler.isAndroid()) {\n      return;\n    }\n    if (e.ctrlKey || e.altKey || e.metaKey) {\n      return;\n    }\n    this.validateKey(e, e.key, keyfilter);\n  },\n  onPaste: function onPaste(e, keyfilter, validateOnly) {\n    if (validateOnly) {\n      return;\n    }\n    var regex = this.getRegex(keyfilter);\n    var clipboard = e.clipboardData.getData('text');\n\n    // loop over each letter pasted and if any fail prevent the paste\n    _toConsumableArray(clipboard).forEach(function (c) {\n      if (!regex.test(c)) {\n        e.preventDefault();\n        return false;\n      }\n    });\n  },\n  validateKey: function validateKey(e, key, keyfilter) {\n    if (key === null || key === undefined) {\n      return;\n    }\n\n    // some AZERTY keys come in with 2 chars like ´ç if Dead key is pressed first\n    var isPrintableKey = key.length <= 2;\n    if (!isPrintableKey) {\n      return;\n    }\n    var regex = this.getRegex(keyfilter);\n    if (!regex.test(key)) {\n      e.preventDefault();\n    }\n  },\n  validate: function validate(e, keyfilter) {\n    var value = e.target.value;\n    var validatePattern = true;\n    var regex = this.getRegex(keyfilter);\n    if (value && !regex.test(value)) {\n      validatePattern = false;\n    }\n    return validatePattern;\n  }\n};\n\nexport { KeyFilter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}